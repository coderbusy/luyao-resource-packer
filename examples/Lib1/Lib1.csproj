<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <ResourcePackerEnabled>true</ResourcePackerEnabled>
    <ResourcePackerPattern>*.res.*</ResourcePackerPattern>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\LuYao.ResourcePacker\LuYao.ResourcePacker.csproj" />
    <ProjectReference Include="..\..\LuYao.ResourcePacker.MSBuild\LuYao.ResourcePacker.MSBuild.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Include="Resources\**\*.res.*" CopyToOutputDirectory="Never" />
  </ItemGroup>

  <!-- 
    NOTE: This example uses project references to demonstrate the library from source.
    For external projects consuming the NuGet package, the MSBuild targets are automatically
    imported and you don't need the UsingTask and Target declarations below.
  -->
  <UsingTask TaskName="LuYao.ResourcePacker.MSBuild.ResourcePackerTask" 
             AssemblyFile="$(MSBuildThisFileDirectory)..\..\LuYao.ResourcePacker.MSBuild\bin\$(Configuration)\netstandard2.0\LuYao.ResourcePacker.MSBuild.dll" />

  <Target Name="PackResources" BeforeTargets="CopyFilesToOutputDirectory" Condition="'$(ResourcePackerEnabled)' == 'true'">
    <PropertyGroup>
      <ResourcePackerOutputFileName Condition="'$(ResourcePackerOutputFileName)' == ''">$(AssemblyName).dat</ResourcePackerOutputFileName>
    </PropertyGroup>
    <ResourcePackerTask
      ProjectDir="$(ProjectDir)"
      OutputPath="$(OutputPath)"
      AssemblyName="$(AssemblyName)"
      ResourcePattern="$(ResourcePackerPattern)"
      OutputFileName="$(ResourcePackerOutputFileName)" />
  </Target>

</Project>
